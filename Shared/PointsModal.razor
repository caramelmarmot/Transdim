@using Transdim.Service;
@using Transdim.DomainModel.GameComponents;

@inject Transdim.Service.IModalService ModalService;
@inject Transdim.Service.IGameStateService GameStateService;
@inject Transdim.Service.IQueueManagementService QueueManagementService;
@inject Transdim.Service.IQueueExecutionService QueueExecutionService;

<span>THIS IS THE POINTS MODAL!</span>

<img class="game-component" src="@gameComponent.ImagePath" asp-append-version="true" />
<button class="btn btn-primary" onclick="@One">1</button>
<button class="btn btn-primary" onclick="@Two">2</button>
<button class="btn btn-primary" onclick="@Three">3</button>

@functions {
    [CascadingParameter]
    public ModalParameters Parameters { get; set; }

    private IGameComponent gameComponent { get; set; }

    protected override void OnInit()
    {
        gameComponent = Parameters.Get<IGameComponent>(nameof(IGameComponent));

        ModalService.BeforeClose += LogAndQueueScoreDisplay;
    }

    public void One()
    {
        ModalService.Close(ModalResult.Ok(1));
    }

    public void Two()
    {
        ModalService.Close(ModalResult.Ok(2));
    }

    public void Three()
    {
        ModalService.Close(ModalResult.Ok(3));
    }

    private void LogAndQueueScoreDisplay(ModalResult modalResult)
    {
        var pointsScored = (int)modalResult.Data;
        ModalService.BeforeClose -= LogAndQueueScoreDisplay;

        GameStateService.AddAction($"scoring {pointsScored} points!", default, true);

        QueueManagementService.AddImmediate(new UiComponentScoringEvent(gameComponent, pointsScored));
        QueueExecutionService.Execute();
    }

}