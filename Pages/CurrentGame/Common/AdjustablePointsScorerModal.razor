@inject Transdim.Service.Controllers.CurrentGame.Common.IAdjustablePointsScorerModalController controller;

<div class="row d-flex justify-content-center">
    <img class="game-component adjustable-points-reference-component" src="@gameComponent.ImagePath" asp-append-version="true" />
</div>
<div class="score">
    <div class="row d-flex justify-content-center">
        <span class="oi oi- oi-caret-left arrow" @onclick="@(() => AdjustPoints(false))"></span>
        <img class="adjustable-points-points-box game-component" src="@pointsImageSource" @onclick="@(() => AdjustPoints(true))" asp-append-version="true" />
        <span class="oi oi- oi-caret-right arrow" @onclick="@(() => AdjustPoints(true))"></span>
    </div>
</div>
<div class="row d-flex justify-content-center">
    <button class="btn btn-primary" @onclick="@Close">Score</button>
</div>

@functions {
    [CascadingParameter]
    public ModalParameters Parameters { get; set; }

    private IGameComponent gameComponent => controller.GameComponent;

    private string pointsImageSource => controller.PointsImageSource;

    protected override void OnInitialized() => controller.OnInitialized(Parameters);

    public void AdjustPoints(bool isUp)
    {
        controller.AdjustPoints(isUp, () => StateHasChanged());
    }

    public void Close() => controller.Close();
}