@using System.Timers;
@using Transdim.DomainModel.GameComponents;

@inject Transdim.Service.IScoreAnimationService scoreAnimationService;
@if (showAnimation)
{
    <div class="row animation-container">
        <img class="col-3 animated" src="@imgSrc" asp-append-version="true" />
        <img class="col-3 animated" src="@imgSrc" asp-append-version="true" />
        <img class="col-3 animated" src="@imgSrc" asp-append-version="true" />
        <img class="col-3 animated" src="@imgSrc" asp-append-version="true" />
    </div>
}

@functions {
    private bool showAnimation = false;

    private Timer timer;

    private string imgSrc;

    protected override void OnInit()
    {
        timer = new Timer(1550);
        scoreAnimationService.OnScore += StartAnimation;
        scoreAnimationService.OnFinishAnimation += OnFinishAnimation;
    }

    public void StartAnimation(IGameComponent gameComponent, int points)
    {
        imgSrc = gameComponent.ImagePath;
        showAnimation = true;
        StateHasChanged();

        timer.Elapsed += FinishAnimation;
        timer.Enabled = true;
    }


    private void FinishAnimation(Object source, ElapsedEventArgs e)
    {
        Invoke(() =>
        {
            timer.Elapsed -= FinishAnimation;
            timer.Enabled = false;
            showAnimation = false;
            scoreAnimationService.FinishAnimation();
        });
    }

    private void OnFinishAnimation()
    {
        StateHasChanged();
    }
}