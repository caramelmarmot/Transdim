@inject Transdim.Service.IGameStateService GameStateService;

<div class="@GetActiveClass(player)" style="background-color:burlywood">@GetScore(player)</div>

@functions {
    [Parameter]
    private Game game { get; set; }

    [Parameter]
    private Player player { get; set; }

    protected override void OnInit()
    {
        game = GameStateService.GetGame();
        GameStateService.OnChange += StateHasChanged;
    }

    // TODO: This needs to be done much better
    public int GetScore(Player player)
    {
        // TODO: move to controller
        var actions = game.GameActions.Where(action => action.Player.Id == player.Id);

        var score = 0;

        foreach (var action in actions)
        {
            score = score + action.Points;
        }

        return score;
    }

    public string GetActiveClass(Player player) =>
        (player.IsActive) ? "active" : "";
}