@page "/new-game"
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject Transdim.Service.INewGameController NewGameController
@inject Transdim.Service.IFactionService FactionService

<h1>New Game</h1>

@for (int i = 0; i < game.Players.Count; i++)
{
    <div>
        <select bind=game.Players[i].FactionIdentifier>
            <option value=game.Players[i].FactionIdentifier>@FactionService.GetByIdentifier(game.Players[i].FactionIdentifier).FriendlyName</option>
            @foreach (var factionIdentifier in NewGameController.GetAvailableFactions(game))
            {
                <option value=@factionIdentifier>@FactionService.GetByIdentifier(factionIdentifier).FriendlyName</option>
            }
        </select>
        Automa? <input type="checkbox" bind="@game.Players[i].IsAutoma" />
    </div>
}

<div>
    <button disabled=@NewGameController.AddPlayerButtonIsDisabled(game) class="btn" onclick="@AddPlayer">Add player</button>
    <button disabled=@NewGameController.RemovePlayerButtonIsDisabled(game) class="btn" onclick="@RemovePlayer">Remove player</button>
</div>
<div>
    <button class="btn btn-primary" onclick="@StartGame">Start game</button>
</div>

@for (int i = 0; i < game.Players.Count; i++)
{
    <div>
        <span>@game.Players[i].FactionIdentifier.ToString()</span>
    </div>
}

@functions {
    private Game game = new Game()
    {
        Players = new List<Player> {
        new Player { FactionIdentifier = FactionIdentifier.Ambas, IsAutoma = false },
        new Player { FactionIdentifier = FactionIdentifier.BalTaks, IsAutoma = true }
    }
    };

    void StartGame()
    {
        NewGameController.StartGame(game);
        //UriHelper.NavigateTo("/current-game");
    }

    void AddPlayer() => NewGameController.AddPlayer(game);
    void RemovePlayer() => NewGameController.RemovePlayer(game);
}
